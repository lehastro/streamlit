import streamlit as st
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt

st.set_page_config(page_title="Storage Calculator", layout="wide")
st.title("üíæ –†–∞—Å—á—ë—Ç –æ–±—ä—ë–º–æ–≤ —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ü–∏—Ñ—Ä–æ–≤—ã—Ö —Å–ª–∞–π–¥–æ–≤")

st.sidebar.header("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã")

slides_per_day = st.sidebar.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–ª–∞–π–¥–æ–≤ –≤ –¥–µ–Ω—å", value=977, min_value=1)
slide_size_gb = st.sidebar.number_input("–°—Ä–µ–¥–Ω–∏–π —Ä–∞–∑–º–µ—Ä 1 —Å–ª–∞–π–¥–∞ (–ì–ë)", value=1.5, min_value=0.1, step=0.1)
formats_count = st.sidebar.number_input("–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ñ–æ—Ä–º–∞—Ç–æ–≤ –∫–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏–∏", value=2, min_value=1)
converter_speed = st.sidebar.number_input("–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –æ–¥–Ω–æ–≥–æ –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–∞ (—Å–ª–∞–π–¥–æ–≤ –≤ –¥–µ–Ω—å)", value=192, min_value=1)

storage_policies = {
    "–ü–æ–ª–∏—Ç–∏–∫–∞ 1 (10 –ª–µ—Ç)": {
        "share": 0.9,
        "retention_days": 3650,
    },
    "–ü–æ–ª–∏—Ç–∏–∫–∞ 2 (5 –ª–µ—Ç)": {
        "share": 0.05,
        "retention_days": 1825,
    },
    "–ü–æ–ª–∏—Ç–∏–∫–∞ 3 (1 –≥–æ–¥)": {
        "share": 0.05,
        "retention_days": 365,
    },
}

max_years = 10
daily_volume_gb = slides_per_day * slide_size_gb * formats_count

# –û–±—ä—ë–º –ø–æ –≥–æ–¥–∞–º —Å —É—á—ë—Ç–æ–º —Ä–µ—Ç–µ–Ω—à–Ω–∞
data = []
total_storage_by_year = np.zeros(max_years)
for policy, conf in storage_policies.items():
    share = conf["share"]
    retention = conf["retention_days"]
    daily_share_gb = daily_volume_gb * share
    for year in range(1, max_years + 1):
        days_alive = min(retention, year * 365)
        total = daily_share_gb * days_alive
        total_storage_by_year[year - 1] += total
        data.append({
            "–ì–æ–¥": year,
            "–ü–æ–ª–∏—Ç–∏–∫–∞": policy,
            "–û–±—ä—ë–º (–ì–ë)": total,
        })

# –¢–∞–±–ª–∏—Ü–∞
st.subheader("üìä –†–∞—Å—á—ë—Ç –æ–±—ä—ë–º–∞ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ –≥–æ–¥–∞–º")
df = pd.DataFrame(data)
df_pivot = df.pivot(index="–ì–æ–¥", columns="–ü–æ–ª–∏—Ç–∏–∫–∞", values="–û–±—ä—ë–º (–ì–ë)")
df_pivot["–ò—Ç–æ–≥–æ (–ì–ë)"] = total_storage_by_year
st.dataframe(df_pivot.style.format("{:.0f}"), use_container_width=True)

# –ì—Ä–∞—Ñ–∏–∫
st.subheader("üìà –û–±—â–∏–π –æ–±—ä—ë–º —Ö–æ–ª–æ–¥–Ω–æ–≥–æ —Ö—Ä–∞–Ω–µ–Ω–∏—è –ø–æ –≥–æ–¥–∞–º")
fig, ax = plt.subplots(figsize=(10, 5))
ax.plot(range(1, max_years + 1), total_storage_by_year, marker='o')
ax.set_xlabel("–ì–æ–¥")
ax.set_ylabel("–û–±—ä—ë–º (–ì–ë)")
ax.grid(True)
st.pyplot(fig)

# –ö–æ–Ω–≤–µ—Ä—Ç–µ—Ä—ã
st.subheader("‚öôÔ∏è –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è")
converters_needed = np.ceil(slides_per_day / converter_speed)
st.markdown(f"–ù–µ–æ–±—Ö–æ–¥–∏–º–æ **{int(converters_needed)}** –∫–æ–Ω–≤–µ—Ä—Ç–µ—Ä–æ–≤ –ø—Ä–∏ {converter_speed} —Å–ª–∞–π–¥–∞—Ö/–¥–µ–Ω—å –Ω–∞ –æ–¥–∏–Ω")
